/**
 * @fileoverview Defines the directory and file structure to be generated by `folio init`.
 * This structure is represented as a tree, making it easy to parse and create recursively.
 */

// A type definition for a node in our scaffolding tree.
export interface ScaffoldNode {
  type: "directory" | "file";
  name: string;
  // Content is for files. Can be empty for placeholder files.
  content?: string;
  // Children are for directories.
  children?: ScaffoldNode[];
}

// The root of our scaffolding structure. We define both `docs` and `.github` directories.
export const structure: ScaffoldNode[] = [
  {
    type: "directory",
    name: ".github",
    children: [
      {
        type: "directory",
        name: "workflows",
        children: [
          {
            type: "file",
            name: "README.md",
            content: "# This file will be populated by the init command",
          },
          {
            type: "file",
            name: "validate-docs.yml",
            content: "# This file will be populated by the init command",
          },
          {
            type: "file",
            name: "update-indexes.yml",
            content: "# This file will be populated by the init command",
          },
          {
            type: "file",
            name: "docs-health-check.yml",
            content: "# This file will be populated by the init command",
          },
        ],
      },
    ],
  },
  {
    type: "directory",
    name: "docs",
    children: [
      {
        type: "file",
        name: "README.md",
        content:
          "# Project Documentation\n\n*This index will be automatically generated by folio-cli for LLM accessibility.*\n\nRun `folio generate-nav` to create comprehensive navigation.",
      },
      // 00-vision-and-strategy
      {
        type: "directory",
        name: "00-vision-and-strategy",
        children: [
          {
            type: "file",
            name: "README.md",
            content: "# Vision and Strategy",
          },
          { type: "file", name: "mission-statement.md" },
          { type: "file", name: "vision.md" },
          { type: "file", name: "problem-statement.md" },
          { type: "file", name: "value-proposition.md" },
          { type: "file", name: "strategic-goals.md" },
          { type: "file", name: "success-metrics.md" },
          { type: "file", name: "user-personas.md" },
          { type: "file", name: "competitive-landscape.md" },
          { type: "file", name: "technical-approach.md" },
          { type: "file", name: "roadmap-highlevel.md" },
        ],
      },
      // 01-product-and-planning
      {
        type: "directory",
        name: "01-product-and-planning",
        children: [
          {
            type: "file",
            name: "README.md",
            content: "# Product and Planning",
          },
          {
            type: "directory",
            name: "epics",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "features",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "wireframes",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          { type: "file", name: "roadmap.md" },
          { type: "file", name: "release-plan.md" },
          { type: "file", name: "user-stories.md" },
          { type: "file", name: "acceptance-criteria-template.md" },
          { type: "file", name: "risks-and-assumptions.md" },
          { type: "file", name: "staekholder-alignment.md" }, // Note: I kept the typo from your tree.txt
        ],
      },
      // 02-architecture-and-design
      {
        type: "directory",
        name: "02-architecture-and-design",
        children: [
          {
            type: "file",
            name: "README.md",
            content: "# Architecture and Design",
          },
          {
            type: "directory",
            name: "adrs",
            children: [
              {
                type: "file",
                name: "README.md",
                content: "# Architecture Decision Records\n\n",
              },
            ],
          },
          {
            type: "directory",
            name: "component-design",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "logical-architecture",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "sequence-diagrams",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          { type: "file", name: "overview.md" },
          { type: "file", name: "system-overview.md" },
          { type: "file", name: "design-principles.md" },
          { type: "file", name: "architecture-model.md" },
          { type: "file", name: "security-architecture.md" },
        ],
      },
      // 03-engineering
      {
        type: "directory",
        name: "03-engineering",
        children: [
          {
            type: "file",
            name: "README.md",
            content: "# Engineering",
          },
          {
            type: "directory",
            name: "api",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "data-model",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "interfaces",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "module-specs",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "services",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          { type: "file", name: "tech-stack.md" },
          { type: "file", name: "code-structure.md" },
          { type: "file", name: "code-quality.md" },
          { type: "file", name: "testing-strategy.md" },
        ],
      },
      // Other top-level dirs
      {
        type: "directory",
        name: "04-devops-and-infrastructure",
        children: [
          {
            type: "file",
            name: "README.md",
            content: "# DevOps and Infrastructure",
          },
        ],
      },
      {
        type: "directory",
        name: "05-operations-and-support",
        children: [
          {
            type: "file",
            name: "README.md",
            content: "# Operations and Support",
          },
        ],
      },
      {
        type: "directory",
        name: "06-sprint-tickets",
        children: [
          {
            type: "file",
            name: "README.md",
            content: "# Sprint Tickets",
          },
          { type: "file", name: "sprints-master-list.md" },
        ],
      },
      // Prompts and Schemas
      {
        type: "directory",
        name: "prompts",
        children: [
          { type: "file", name: "README.md", content: "# Prompts" },
          {
            type: "directory",
            name: "examples",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "system",
            children: [{ type: "file", name: ".gitkeep" }],
          },
          {
            type: "directory",
            name: "user",
            children: [{ type: "file", name: ".gitkeep" }],
          },
        ],
      },
      {
        type: "directory",
        name: "schemas",
        children: [
          {
            type: "file",
            name: "document-frontmatter.schema.yaml",
            content: "# Paste your schema content here",
          },
          {
            type: "file",
            name: "ticket-frontmatter.schema.yaml",
            content: "# Paste your schema content here",
          },
        ],
      },
      {
        type: "directory",
        name: "_templates",
        children: [
          {
            type: "file",
            name: "README.md",
            content: "# Document Templates\n\nThis directory contains Handlebars templates used by `folio new` to create new documents.\n\nTemplates are copied here during `folio init` and can be customized for your project.",
          },
        ],
      },
    ],
  },
];
