name: Validate Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'folio.config.ts'
      - '.github/workflows/validate-docs.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'folio.config.ts'
      - '.github/workflows/validate-docs.yml'

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate Documentation

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install folio-cli
        run: npm install -g folio-cli || npm install -g .

      - name: Validate documentation structure
        run: |
          echo "📋 Validating documentation frontmatter..."
          folio validate

      - name: Check for missing documents
        run: |
          echo "🔍 Checking for required documents..."
          
          # Check if critical documents exist
          MISSING_DOCS=""
          
          # Core strategic documents
          if [ ! -f "docs/00-vision-and-strategy/mission-statement.md" ]; then
            MISSING_DOCS="$MISSING_DOCS\n- Mission Statement"
          fi
          
          if [ ! -f "docs/00-vision-and-strategy/vision.md" ]; then
            MISSING_DOCS="$MISSING_DOCS\n- Vision Document"
          fi
          
          # Architecture documentation
          if [ ! -f "docs/02-architecture-and-design/overview.md" ]; then
            MISSING_DOCS="$MISSING_DOCS\n- Architecture Overview"
          fi
          
          if [ -n "$MISSING_DOCS" ]; then
            echo "⚠️ Missing critical documentation:$MISSING_DOCS"
            echo "Consider creating these documents to maintain complete project documentation."
          else
            echo "✅ All critical documents are present."
          fi

      - name: Generate documentation report
        run: |
          echo "📊 Documentation Statistics:"
          
          # Count documents by type
          ADR_COUNT=$(find docs/02-architecture-and-design/adr -name "*.md" -not -name "index.md" 2>/dev/null | wc -l || echo "0")
          TOTAL_DOCS=$(find docs -name "*.md" -not -name "README.md" -not -name "index.md" 2>/dev/null | wc -l || echo "0")
          
          echo "- Total documents: $TOTAL_DOCS"
          echo "- Architecture Decision Records: $ADR_COUNT"
          
          # List recent documents
          echo ""
          echo "📝 Recently modified documents:"
          find docs -name "*.md" -not -name "README.md" -type f -mtime -7 2>/dev/null | head -5 | while read file; do
            echo "- $file"
          done || echo "- No recently modified documents found"

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Get documentation statistics
            let stats = "## 📋 Documentation Validation Results\n\n";
            stats += "✅ Documentation validation completed successfully!\n\n";
            
            // Add any validation warnings or suggestions
            stats += "### 💡 Suggestions:\n";
            stats += "- Keep document frontmatter up to date\n";
            stats += "- Ensure all ADRs have proper status fields\n";
            stats += "- Consider adding more detailed descriptions\n\n";
            
            stats += "*This comment was automatically generated by the documentation validation workflow.*";
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: stats
            });